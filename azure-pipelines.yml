# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: belal_backend_variable_group

steps:
  - task: TerraformInstaller@0
    displayName: 'Terraform Install'
    inputs:
      terraformVersion: 'latest'

  - task: TerraformCLI@0
    displayName: 'Terraform Init'
    inputs:
      command: 'init'
      allowTelemetryCollection: true
      backendServiceArm: $(backendServiceArm)
      backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
      backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
      backendAzureRmContainerName: $(backendAzureRmContainerName)
      backendAzureRmKey: $(backendAzureRmKey)
      backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
      backendType: $(backendType)
      ensureBackend: true 

  - task: TerraformCLI@0
    displayName: 'Terraform Validate'
    inputs:
      command: 'validate'
      allowTelemetryCollection: true

  - task: TerraformCLI@0
    displayName: 'Terraform Plan'
    inputs:
      command: 'plan'
      environmentServiceName: $(backendServiceArm)
      allowTelemetryCollection: true
      publishPlanResults: 'plan-results'
      commandOptions: '-out plan-results.tfplan'

  - task: TerraformCLI@0
    displayName: 'Terraform Apply'
    inputs:
      command: 'apply'
      environmentServiceName: $(backendServiceArm)
      allowTelemetryCollection: true
      commandOptions: 'plan-results.tfplan'